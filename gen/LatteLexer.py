# Generated from Latte.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2)")
        buf.write("\u0121\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7")
        buf.write("\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3")
        buf.write("\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33")
        buf.write("\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 ")
        buf.write("\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\7#\u00d0\n#\f#\16#\u00d3")
        buf.write("\13#\3#\3#\3#\3#\7#\u00d9\n#\f#\16#\u00dc\13#\5#\u00de")
        buf.write("\n#\3#\3#\3$\3$\3$\3$\7$\u00e6\n$\f$\16$\u00e9\13$\3$")
        buf.write("\3$\3$\3$\3$\3%\3%\5%\u00f2\n%\3&\3&\3\'\3\'\3(\3(\3)")
        buf.write("\6)\u00fb\n)\r)\16)\u00fc\3*\3*\5*\u0101\n*\3+\3+\3+\7")
        buf.write("+\u0106\n+\f+\16+\u0109\13+\3,\6,\u010c\n,\r,\16,\u010d")
        buf.write("\3,\3,\3-\3-\5-\u0114\n-\3-\3-\3.\6.\u0119\n.\r.\16.\u011a")
        buf.write("\3/\3/\3/\5/\u0120\n/\3\u00e7\2\60\3\3\5\4\7\5\t\6\13")
        buf.write("\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37")
        buf.write("\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34")
        buf.write("\67\359\36;\37= ?!A\"C#E$G%I\2K\2M\2O\2Q&S\2U\'W(Y)[\2")
        buf.write("]\2\3\2\t\4\2\f\f\17\17\5\2C\\\u00c2\u00d8\u00da\u00e0")
        buf.write("\5\2c|\u00e1\u00f8\u00fa\u0101\3\2\62;\5\2\13\f\17\17")
        buf.write("\"\"\4\2$$^^\7\2$$^^ppttvv\2\u0126\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2Q\3\2\2\2\2U\3\2\2\2\2W\3\2")
        buf.write("\2\2\2Y\3\2\2\2\3_\3\2\2\2\5a\3\2\2\2\7c\3\2\2\2\te\3")
        buf.write("\2\2\2\13g\3\2\2\2\ri\3\2\2\2\17k\3\2\2\2\21m\3\2\2\2")
        buf.write("\23p\3\2\2\2\25s\3\2\2\2\27z\3\2\2\2\31}\3\2\2\2\33\u0082")
        buf.write("\3\2\2\2\35\u0088\3\2\2\2\37\u008c\3\2\2\2!\u0093\3\2")
        buf.write("\2\2#\u009b\3\2\2\2%\u00a0\3\2\2\2\'\u00a2\3\2\2\2)\u00a4")
        buf.write("\3\2\2\2+\u00a7\3\2\2\2-\u00aa\3\2\2\2/\u00af\3\2\2\2")
        buf.write("\61\u00b5\3\2\2\2\63\u00b7\3\2\2\2\65\u00b9\3\2\2\2\67")
        buf.write("\u00bb\3\2\2\29\u00bd\3\2\2\2;\u00bf\3\2\2\2=\u00c2\3")
        buf.write("\2\2\2?\u00c4\3\2\2\2A\u00c7\3\2\2\2C\u00ca\3\2\2\2E\u00dd")
        buf.write("\3\2\2\2G\u00e1\3\2\2\2I\u00f1\3\2\2\2K\u00f3\3\2\2\2")
        buf.write("M\u00f5\3\2\2\2O\u00f7\3\2\2\2Q\u00fa\3\2\2\2S\u0100\3")
        buf.write("\2\2\2U\u0102\3\2\2\2W\u010b\3\2\2\2Y\u0111\3\2\2\2[\u0118")
        buf.write("\3\2\2\2]\u011f\3\2\2\2_`\7*\2\2`\4\3\2\2\2ab\7+\2\2b")
        buf.write("\6\3\2\2\2cd\7.\2\2d\b\3\2\2\2ef\7}\2\2f\n\3\2\2\2gh\7")
        buf.write("\177\2\2h\f\3\2\2\2ij\7=\2\2j\16\3\2\2\2kl\7?\2\2l\20")
        buf.write("\3\2\2\2mn\7-\2\2no\7-\2\2o\22\3\2\2\2pq\7/\2\2qr\7/\2")
        buf.write("\2r\24\3\2\2\2st\7t\2\2tu\7g\2\2uv\7v\2\2vw\7w\2\2wx\7")
        buf.write("t\2\2xy\7p\2\2y\26\3\2\2\2z{\7k\2\2{|\7h\2\2|\30\3\2\2")
        buf.write("\2}~\7g\2\2~\177\7n\2\2\177\u0080\7u\2\2\u0080\u0081\7")
        buf.write("g\2\2\u0081\32\3\2\2\2\u0082\u0083\7y\2\2\u0083\u0084")
        buf.write("\7j\2\2\u0084\u0085\7k\2\2\u0085\u0086\7n\2\2\u0086\u0087")
        buf.write("\7g\2\2\u0087\34\3\2\2\2\u0088\u0089\7k\2\2\u0089\u008a")
        buf.write("\7p\2\2\u008a\u008b\7v\2\2\u008b\36\3\2\2\2\u008c\u008d")
        buf.write("\7u\2\2\u008d\u008e\7v\2\2\u008e\u008f\7t\2\2\u008f\u0090")
        buf.write("\7k\2\2\u0090\u0091\7p\2\2\u0091\u0092\7i\2\2\u0092 \3")
        buf.write("\2\2\2\u0093\u0094\7d\2\2\u0094\u0095\7q\2\2\u0095\u0096")
        buf.write("\7q\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098\u0099")
        buf.write("\7c\2\2\u0099\u009a\7p\2\2\u009a\"\3\2\2\2\u009b\u009c")
        buf.write("\7x\2\2\u009c\u009d\7q\2\2\u009d\u009e\7k\2\2\u009e\u009f")
        buf.write("\7f\2\2\u009f$\3\2\2\2\u00a0\u00a1\7/\2\2\u00a1&\3\2\2")
        buf.write("\2\u00a2\u00a3\7#\2\2\u00a3(\3\2\2\2\u00a4\u00a5\7(\2")
        buf.write("\2\u00a5\u00a6\7(\2\2\u00a6*\3\2\2\2\u00a7\u00a8\7~\2")
        buf.write("\2\u00a8\u00a9\7~\2\2\u00a9,\3\2\2\2\u00aa\u00ab\7v\2")
        buf.write("\2\u00ab\u00ac\7t\2\2\u00ac\u00ad\7w\2\2\u00ad\u00ae\7")
        buf.write("g\2\2\u00ae.\3\2\2\2\u00af\u00b0\7h\2\2\u00b0\u00b1\7")
        buf.write("c\2\2\u00b1\u00b2\7n\2\2\u00b2\u00b3\7u\2\2\u00b3\u00b4")
        buf.write("\7g\2\2\u00b4\60\3\2\2\2\u00b5\u00b6\7-\2\2\u00b6\62\3")
        buf.write("\2\2\2\u00b7\u00b8\7,\2\2\u00b8\64\3\2\2\2\u00b9\u00ba")
        buf.write("\7\61\2\2\u00ba\66\3\2\2\2\u00bb\u00bc\7\'\2\2\u00bc8")
        buf.write("\3\2\2\2\u00bd\u00be\7>\2\2\u00be:\3\2\2\2\u00bf\u00c0")
        buf.write("\7>\2\2\u00c0\u00c1\7?\2\2\u00c1<\3\2\2\2\u00c2\u00c3")
        buf.write("\7@\2\2\u00c3>\3\2\2\2\u00c4\u00c5\7@\2\2\u00c5\u00c6")
        buf.write("\7?\2\2\u00c6@\3\2\2\2\u00c7\u00c8\7?\2\2\u00c8\u00c9")
        buf.write("\7?\2\2\u00c9B\3\2\2\2\u00ca\u00cb\7#\2\2\u00cb\u00cc")
        buf.write("\7?\2\2\u00ccD\3\2\2\2\u00cd\u00d1\7%\2\2\u00ce\u00d0")
        buf.write("\n\2\2\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3\3\2\2\2\u00d1")
        buf.write("\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00de\3\2\2\2")
        buf.write("\u00d3\u00d1\3\2\2\2\u00d4\u00d5\7\61\2\2\u00d5\u00d6")
        buf.write("\7\61\2\2\u00d6\u00da\3\2\2\2\u00d7\u00d9\n\2\2\2\u00d8")
        buf.write("\u00d7\3\2\2\2\u00d9\u00dc\3\2\2\2\u00da\u00d8\3\2\2\2")
        buf.write("\u00da\u00db\3\2\2\2\u00db\u00de\3\2\2\2\u00dc\u00da\3")
        buf.write("\2\2\2\u00dd\u00cd\3\2\2\2\u00dd\u00d4\3\2\2\2\u00de\u00df")
        buf.write("\3\2\2\2\u00df\u00e0\b#\2\2\u00e0F\3\2\2\2\u00e1\u00e2")
        buf.write("\7\61\2\2\u00e2\u00e3\7,\2\2\u00e3\u00e7\3\2\2\2\u00e4")
        buf.write("\u00e6\13\2\2\2\u00e5\u00e4\3\2\2\2\u00e6\u00e9\3\2\2")
        buf.write("\2\u00e7\u00e8\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e8\u00ea")
        buf.write("\3\2\2\2\u00e9\u00e7\3\2\2\2\u00ea\u00eb\7,\2\2\u00eb")
        buf.write("\u00ec\7\61\2\2\u00ec\u00ed\3\2\2\2\u00ed\u00ee\b$\2\2")
        buf.write("\u00eeH\3\2\2\2\u00ef\u00f2\5K&\2\u00f0\u00f2\5M\'\2\u00f1")
        buf.write("\u00ef\3\2\2\2\u00f1\u00f0\3\2\2\2\u00f2J\3\2\2\2\u00f3")
        buf.write("\u00f4\t\3\2\2\u00f4L\3\2\2\2\u00f5\u00f6\t\4\2\2\u00f6")
        buf.write("N\3\2\2\2\u00f7\u00f8\t\5\2\2\u00f8P\3\2\2\2\u00f9\u00fb")
        buf.write("\5O(\2\u00fa\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa")
        buf.write("\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fdR\3\2\2\2\u00fe\u0101")
        buf.write("\5I%\2\u00ff\u0101\7a\2\2\u0100\u00fe\3\2\2\2\u0100\u00ff")
        buf.write("\3\2\2\2\u0101T\3\2\2\2\u0102\u0107\5S*\2\u0103\u0106")
        buf.write("\5S*\2\u0104\u0106\5O(\2\u0105\u0103\3\2\2\2\u0105\u0104")
        buf.write("\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0107")
        buf.write("\u0108\3\2\2\2\u0108V\3\2\2\2\u0109\u0107\3\2\2\2\u010a")
        buf.write("\u010c\t\6\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2")
        buf.write("\u010d\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010f\3")
        buf.write("\2\2\2\u010f\u0110\b,\3\2\u0110X\3\2\2\2\u0111\u0113\7")
        buf.write("$\2\2\u0112\u0114\5[.\2\u0113\u0112\3\2\2\2\u0113\u0114")
        buf.write("\3\2\2\2\u0114\u0115\3\2\2\2\u0115\u0116\7$\2\2\u0116")
        buf.write("Z\3\2\2\2\u0117\u0119\5]/\2\u0118\u0117\3\2\2\2\u0119")
        buf.write("\u011a\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2\2\2")
        buf.write("\u011b\\\3\2\2\2\u011c\u0120\n\7\2\2\u011d\u011e\7^\2")
        buf.write("\2\u011e\u0120\t\b\2\2\u011f\u011c\3\2\2\2\u011f\u011d")
        buf.write("\3\2\2\2\u0120^\3\2\2\2\20\2\u00d1\u00da\u00dd\u00e7\u00f1")
        buf.write("\u00fc\u0100\u0105\u0107\u010d\u0113\u011a\u011f\4\2\3")
        buf.write("\2\b\2\2")
        return buf.getvalue()


class LatteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    COMMENT = 34
    MULTICOMMENT = 35
    INT = 36
    ID = 37
    WS = 38
    STR = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'{'", "'}'", "';'", "'='", "'++'", "'--'", 
            "'return'", "'if'", "'else'", "'while'", "'int'", "'string'", 
            "'boolean'", "'void'", "'-'", "'!'", "'&&'", "'||'", "'true'", 
            "'false'", "'+'", "'*'", "'/'", "'%'", "'<'", "'<='", "'>'", 
            "'>='", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "MULTICOMMENT", "INT", "ID", "WS", "STR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "COMMENT", "MULTICOMMENT", "Letter", "Capital", 
                  "Small", "Digit", "INT", "ID_First", "ID", "WS", "STR", 
                  "StringCharacters", "StringCharacter" ]

    grammarFileName = "Latte.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


